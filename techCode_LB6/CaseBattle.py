# case_battle.py
# –¢—Ä–µ–±—É–µ—Ç—Å—è: pip install PyQt5
import sys
import random
from dataclasses import dataclass
from typing import Tuple, List, Dict

from PyQt5.QtCore import Qt, QSize
from PyQt5.QtGui import QPixmap, QPainter, QColor, QIcon, QFont
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QWidget, QLabel, QPushButton, QMessageBox,
    QHBoxLayout, QVBoxLayout, QListWidget, QListWidgetItem, QFrame, QSizePolicy, QSpacerItem
)


@dataclass
class Rarity:
    key: str                   # –º–∞—à–∏–Ω–Ω–æ–µ –∏–º—è
    name_ru: str               # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ —Ä—É—Å—Å–∫–æ–µ –∏–º—è
    weight: int                # –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å (–≤–µ—Å)
    color: Tuple[int, int, int]
    value_range: Tuple[int, int]
    items: List[Tuple[str, str]]  # (–Ω–∞–∑–≤–∞–Ω–∏–µ, —ç–º–æ–¥–∑–∏/–∏–∫–æ–Ω-—Ç–µ–∫—Å—Ç)


class CaseBattleWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        # --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã ---
        self.start_balance = 1600
        self.case_price = 105

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–¥–∫–æ—Å—Ç–µ–π –∏ –ø—É–ª –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        self.rarities: List[Rarity] = [
            Rarity(
                key="common",
                name_ru="–æ–±—ã—á–Ω–æ–µ",
                weight=70,
                color=(176, 190, 197),           # —Å–µ—Ä–æ-–≥–æ–ª—É–±–æ–π
                value_range=(15, 80),
                items=[
                    ("–†–∂–∞–≤—ã–π –Ω–æ–∂", "üó°Ô∏è"),
                    ("–°—Ç–∞—Ä–∞—è –∫–µ–ø–∫–∞", "üß¢"),
                    ("–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π –±—Ä–∞—Å–ª–µ—Ç", "üìø"),
                    ("–ü–æ—Ç—ë—Ä—Ç–∞—è –∫–∞—Ä—Ç–∞", "üó∫Ô∏è"),
                    ("–°–ª–æ–º–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞—Å", "üß≠"),
                ],
            ),
            Rarity(
                key="rare",
                name_ru="—Ä–µ–¥–∫–æ–µ",
                weight=15,
                color=(100, 181, 246),           # —Å–∏–Ω–∏–π
                value_range=(60, 200),
                items=[
                    ("–ê–º—É–ª–µ—Ç —É–¥–∞—á–∏", "üßø"),
                    ("–ü–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–Ω–æ–∫", "üî™"),
                    ("–°–∞–ø–æ–≥–∏ —Ä–∞–∑–≤–µ–¥—á–∏–∫–∞", "üë¢"),
                    ("–ú–µ–¥–∞–ª—å–æ–Ω –≥–µ—Ä–æ—è", "üéñÔ∏è"),
                    ("–†–µ–¥–∫–∞—è –º–æ–Ω–µ—Ç–∞", "ü™ô"),
                ],
            ),
            Rarity(
                key="epic",
                name_ru="—ç–ø–∏—á–µ—Å–∫–æ–µ",
                weight=5,
                color=(186, 104, 200),           # —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
                value_range=(100, 500),
                items=[
                    ("–ü–æ—Å–æ—Ö –±—É—Ä—å", "ü™Ñ"),
                    ("–ú–∞—Å–∫–∞ —Ç–µ–Ω–∏", "üé≠"),
                    ("–ö–ª–∏–Ω–æ–∫ –±—É—Ä–∏", "‚ö°"),
                    ("–ö–æ–ª—å—Ü–æ –º—É–¥—Ä–µ—Ü–∞", "üíç"),
                    ("–ö–Ω–∏–≥–∞ —Ç–∞–π–Ω", "üìú"),
                ],
            ),
            Rarity(
                key="legendary",
                name_ru="–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ",
                weight=1,
                color=(255, 193, 7),             # –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π
                value_range=(400, 1200),
                items=[
                    ("–î—Ä–∞–∫–æ–Ω–∏–π –º–µ—á", "üêâ"),
                    ("–ö–æ—Ä–æ–Ω–∞ –∫–æ—Ä–æ–ª–µ–π", "üëë"),
                    ("–¢–∞–ª–∏—Å–º–∞–Ω —Ñ–µ–Ω–∏–∫—Å–∞", "üî•"),
                    ("–ó–≤—ë–∑–¥–Ω—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç", "‚ú®"),
                    ("–ö–ª–∏–Ω–æ–∫ —Ä–∞—Å—Å–≤–µ—Ç–∞", "üåÖ"),
                ],
            ),
        ]

        # --- –°–æ—Å—Ç–æ—è–Ω–∏–µ ---
        self.balance = self.start_balance

        self.init_ui()

    # ---------- UI ----------
    def init_ui(self):
        self.setWindowTitle("Case Battle ‚Äî —Å–∏–º—É–ª—è—Ç–æ—Ä –∫–µ–π—Å–æ–≤ (–†—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è)")
        self.setMinimumSize(900, 520)

        central = QWidget(self)
        self.setCentralWidget(central)

        # –û—Å–Ω–æ–≤–Ω–æ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –ª–µ–π–∞—É—Ç: —Å–ª–µ–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —Å–ø—Ä–∞–≤–∞ –ª–æ–≥
        root = QHBoxLayout(central)
        root.setContentsMargins(16, 16, 16, 16)
        root.setSpacing(16)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
        left = QVBoxLayout()
        left.setSpacing(12)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ / –±–∞–ª–∞–Ω—Å
        title = QLabel("Case Battle")
        tfont = QFont()
        tfont.setPointSize(18)
        tfont.setBold(True)
        title.setFont(tfont)
        title.setAlignment(Qt.AlignLeft | Qt.AlignVCenter)

        self.balance_label = QLabel(self._balance_text())
        bfont = QFont()
        bfont.setPointSize(16)
        bfont.setBold(True)
        self.balance_label.setFont(bfont)
        self.balance_label.setStyleSheet("color: #2e7d32;")  # –∑–µ–ª—ë–Ω—ã–π

        price_label = QLabel(f"–¶–µ–Ω–∞ –∫–µ–π—Å–∞: {self.case_price} –º–æ–Ω–µ—Ç")
        price_label.setStyleSheet("color: #455a64;")

        note = QLabel("–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n–∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å.")
        note.setStyleSheet("color: #607d8b;")
        note.setWordWrap(True)

        # –ö–Ω–æ–ø–∫–∏
        self.open_btn = QPushButton("–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å")
        self.open_btn.setCursor(Qt.PointingHandCursor)
        self.open_btn.setMinimumHeight(40)
        self.open_btn.clicked.connect(self.on_open_case)

        exit_btn = QPushButton("–í—ã–π—Ç–∏")
        exit_btn.setCursor(Qt.PointingHandCursor)
        exit_btn.setMinimumHeight(36)
        exit_btn.clicked.connect(self.close)

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (—Ç–æ–Ω–∫–∞—è –ª–∏–Ω–∏—è)
        line = QFrame()
        line.setFrameShape(QFrame.HLine)
        line.setFrameShadow(QFrame.Sunken)
        line.setStyleSheet("color: #B0BEC5;")

        left.addWidget(title)
        left.addWidget(self.balance_label)
        left.addWidget(price_label)
        left.addWidget(line)
        left.addWidget(self.open_btn)
        left.addWidget(exit_btn)
        left.addSpacing(8)
        left.addWidget(note)
        left.addItem(QSpacerItem(20, 20, QSizePolicy.Minimum, QSizePolicy.Expanding))

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (–ª–æ–≥)
        right = QVBoxLayout()
        right.setSpacing(8)

        log_title = QLabel("–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏:")
        lfont = QFont()
        lfont.setPointSize(12)
        lfont.setBold(True)
        log_title.setFont(lfont)

        self.log_list = QListWidget()
        self.log_list.setIconSize(QSize(48, 48))
        self.log_list.setAlternatingRowColors(True)
        self.log_list.setStyleSheet("""
            QListWidget {
                background: #FAFAFA;
                border: 1px solid #CFD8DC;
            }
            QListWidget::item {
                padding: 8px;
            }
        """)

        right.addWidget(log_title)
        right.addWidget(self.log_list)

        root.addLayout(left, 1)
        root.addLayout(right, 2)

        self._update_open_button_state()

    # ---------- –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ ----------
    def on_open_case(self):
        if self.balance < self.case_price:
            self._not_enough_money()
            return

        # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–µ–π—Å–∞
        self.balance -= self.case_price

        # –í—ã–±–æ—Ä —Ä–µ–¥–∫–æ—Å—Ç–∏ –ø–æ –≤–µ—Å–∞–º
        rarity = self._choose_rarity()
        item_name, emoji = random.choice(rarity.items)
        value = random.randint(*rarity.value_range)

        # –ê–≤—Ç–æ–∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å
        self.balance += value

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.balance_label.setText(self._balance_text())
        self._update_open_button_state()

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥
        icon = QIcon(self._make_item_icon(rarity.color, emoji))
        text = f"{item_name} ‚Äî {rarity.name_ru.capitalize()} | –°—Ç–æ–∏–º–æ—Å—Ç—å: {value} –º–æ–Ω–µ—Ç"
        self._append_log(icon, text)

    def _append_log(self, icon: QIcon, text: str):
        item = QListWidgetItem(icon, text)
        self.log_list.addItem(item)
        self.log_list.scrollToBottom()

    def _choose_rarity(self) -> Rarity:
        weights = [r.weight for r in self.rarities]
        return random.choices(self.rarities, weights=weights, k=1)[0]

    # ---------- –ò–∫–æ–Ω–∫–∏ ----------
    def _make_item_icon(self, rgb: Tuple[int, int, int], text: str) -> QPixmap:
        """–ü—Ä–æ—Å—Ç–∞—è –∏–∫–æ–Ω–∫–∞: —Ü–≤–µ—Ç–Ω–æ–π —Å–∫—Ä—É–≥–ª—ë–Ω–Ω—ã–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ + —ç–º–æ–¥–∑–∏/—Ç–µ–∫—Å—Ç."""
        w, h = 48, 48
        pix = QPixmap(w, h)
        pix.fill(Qt.transparent)

        r, g, b = rgb
        color = QColor(r, g, b)

        painter = QPainter(pix)
        painter.setRenderHint(QPainter.Antialiasing, True)

        # –§–æ–Ω
        painter.setBrush(color)
        painter.setPen(Qt.NoPen)
        painter.drawRoundedRect(0, 0, w, h, 10, 10)

        # –¢–µ–∫—Å—Ç (—ç–º–æ–¥–∑–∏)
        painter.setPen(Qt.black)
        font = QFont()
        font.setPointSize(18)
        font.setBold(True)
        painter.setFont(font)
        painter.drawText(0, 0, w, h, Qt.AlignCenter, text)
        painter.end()
        return pix

    # ---------- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ ----------
    def _balance_text(self) -> str:
        return f"–ë–∞–ª–∞–Ω—Å: {self.balance} –º–æ–Ω–µ—Ç"

    def _not_enough_money(self):
        QMessageBox.warning(
            self,
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –∏–≥—Ä—É.",
            QMessageBox.Ok
        )

    def _update_open_button_state(self):
        can_open = self.balance >= self.case_price
        self.open_btn.setEnabled(can_open)
        if not can_open:
            self.open_btn.setToolTip("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞")
        else:
            self.open_btn.setToolTip("–û—Ç–∫—Ä—ã—Ç—å –æ–¥–∏–Ω –∫–µ–π—Å –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Ü–µ–Ω—É")


def main():
    app = QApplication(sys.argv)
    # –ù–µ–±–æ–ª—å—à–∞—è —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞
    app.setStyleSheet("""
        QWidget { font-family: Segoe UI, Arial; font-size: 11pt; }
        QPushButton {
            background-color: #1976D2; color: white; border: none; padding: 8px 14px;
            border-radius: 8px;
        }
        QPushButton:hover { background-color: #1565C0; }
        QPushButton:disabled { background-color: #90A4AE; color: #ECEFF1; }
        QLabel { color: #263238; }
        QMainWindow { background: #FFFFFF; }
    """)
    win = CaseBattleWindow()
    win.show()
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
